"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os  # Ajouté pour gérer les variables d'environnement

from datetime import timedelta  # Ajouté pour la configuration des tokens

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'django-insecure-&9mzm_%&zp$r-ocx(-z)94xys*lw$@_g7e6kq760z98x--0c+!')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Ajout des bibliothèques nécessaires
    'corsheaders',  # Pour gérer les CORS
    'rest_framework',  # Pour l'API REST
    'rest_framework.authtoken',  # Ajoute cette ligne pour les tokens d'authentification
    'api.apps.ApiConfig',  # Pour l'application API
    'cloudinary',
    'cloudinary_storage',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Ajouté pour CORS
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'NAME': 'Mysql',
        'USER': 'root',         # Votre utilisateur MySQL (par défaut : root)
        'PASSWORD': 'root', # Le mot de passe associé à cet utilisateur
        'HOST': '127.0.0.1',    # L'adresse de votre serveur MySQL (localhost)
        'PORT': '3306',         # Le port MySQL (3306 par défaut)
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"  # Option pour éviter certains problèmes
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
# STATICFILES_DIRS = [BASE_DIR / 'static']  # Ajout pour servir les fichiers statiques
# STATIC_ROOT = BASE_DIR / 'staticfiles'   # Emplacement pour collectstatic en production

# Configuration Cloudinary
CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dxub83eaj',
    'API_KEY': '513221626775168',
    'API_SECRET': 'etH3VAUGn73WFD2r8msCDe3BIQA',
}

# Utiliser Cloudinary pour stocker les fichiers médias
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

# URL publique pour accéder aux fichiers médias
MEDIA_URL = 'https://res.cloudinary.com/dxub83eaj/'


# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'media'  # Emplacement pour les fichiers médias

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuration des CORS
CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173',  # URL de votre frontend Vue.js
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),  # Token d'accès expire après 15 minutes
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),     # Token de rafraîchissement expire après 7 jours
    'ROTATE_REFRESH_TOKENS': False,                   # Pas de rotation des refresh tokens
    'BLACKLIST_AFTER_ROTATION': False,                # Pas de blacklisting après rotation des refresh tokens
    'ALGORITHM': 'HS256',                             # Utilisation de l'algorithme HMAC-SHA256
}
# Variables supplémentaires pour la production (facultatif)
# if not DEBUG:
#     ALLOWED_HOSTS = ['votre-domaine.com']  # Remplacez par votre domaine
